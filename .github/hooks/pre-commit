#!/bin/bash

# Bicep Pre-Commit Hook
# Place this file in .git/hooks/pre-commit and make it executable

# Set colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo "Starting Bicep pre-commit validation..."

# Get list of staged .bicep files
STAGED_BICEP_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.bicep$')

if [ -z "$STAGED_BICEP_FILES" ]; then
    echo -e "${GREEN}No Bicep files to validate.${NC}"
    exit 0
fi

# Check if az cli and bicep are installed
if ! command -v az &> /dev/null; then
    echo -e "${RED}Error: Azure CLI is not installed or not in PATH${NC}"
    exit 1
fi

# Ensure Bicep is installed
az bicep version &> /dev/null
if [ $? -ne 0 ]; then
    echo -e "${YELLOW}Bicep CLI not found, installing...${NC}"
    az bicep install
    if [ $? -ne 0 ]; then
        echo -e "${RED}Failed to install Bicep CLI${NC}"
        exit 1
    fi
fi

# Initialize error flag
ERRORS_FOUND=0

# Validate each staged Bicep file
for FILE in $STAGED_BICEP_FILES; do
    echo -e "\nValidating ${FILE}..."
    
    # Lint the file
    echo "Running linter..."
    LINT_RESULT=$(az bicep build --file "$FILE" --stdout --diagnostics-only 2>&1)
    LINT_STATUS=$?
    
    if [ $LINT_STATUS -ne 0 ]; then
        echo -e "${RED}Linting errors in $FILE:${NC}"
        echo "$LINT_RESULT"
        ERRORS_FOUND=1
        continue
    fi
    
    # Build the file
    echo "Building template..."
    BUILD_RESULT=$(az bicep build --file "$FILE" --stdout 2>&1)
    BUILD_STATUS=$?
    
    if [ $BUILD_STATUS -ne 0 ]; then
        echo -e "${RED}Build errors in $FILE:${NC}"
        echo "$BUILD_RESULT"
        ERRORS_FOUND=1
        continue
    fi
    
    # Basic validation checks
    
    # Check for parameter descriptions
    PARAMS_COUNT=$(grep -c "^param " "$FILE" || echo 0)
    DESC_COUNT=$(grep -c "@description(" "$FILE" || echo 0)
    
    if [ $DESC_COUNT -lt $PARAMS_COUNT ]; then
        echo -e "${YELLOW}Warning: Missing parameter descriptions in $FILE${NC}"
        echo -e "${YELLOW}Found $DESC_COUNT descriptions for $PARAMS_COUNT parameters${NC}"
    fi
    
    # Check for resource tagging
    if grep -q "^resource " "$FILE"; then
        if ! grep -q "tags: " "$FILE"; then
            echo -e "${YELLOW}Warning: Resources in $FILE may be missing tags${NC}"
        fi
    fi
    
    # Check for secure string parameters
    if grep -q "param .* string" "$FILE"; then
        if grep -q "password\|secret\|key" "$FILE" && ! grep -q "@secure()" "$FILE"; then
            echo -e "${YELLOW}Warning: $FILE may have sensitive parameters not marked as @secure()${NC}"
        fi
    fi
    
    echo -e "${GREEN}Validation passed for $FILE${NC}"
done

if [ $ERRORS_FOUND -ne 0 ]; then
    echo -e "\n${RED}Bicep validation failed. Please fix the errors before committing.${NC}"
    exit 1
else
    echo -e "\n${GREEN}All Bicep files passed validation!${NC}"
    exit 0
fi
